// <auto-generated />
using LocalApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LocalApi.Migrations
{
    [DbContext(typeof(LocalApiContext))]
    partial class LocalApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("LocalApi.Models.Business", b =>
                {
                    b.Property<int>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Location")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("BusinessId");

                    b.ToTable("Businesses");

                    b.HasData(
                        new
                        {
                            BusinessId = 1,
                            Description = "Woolly Mammoth",
                            Location = "Baytown",
                            Name = "Matilda"
                        },
                        new
                        {
                            BusinessId = 2,
                            Description = "Dinosaur",
                            Location = "Baytown",
                            Name = "Rexie"
                        },
                        new
                        {
                            BusinessId = 3,
                            Description = "Dinosaur",
                            Location = "Baytown",
                            Name = "Matilda"
                        },
                        new
                        {
                            BusinessId = 4,
                            Description = "Shark",
                            Location = "Baytown",
                            Name = "Pip"
                        },
                        new
                        {
                            BusinessId = 5,
                            Description = "Dinosaur",
                            Location = "Baytown",
                            Name = "Bartholomew"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
